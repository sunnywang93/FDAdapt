% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_eigenvalues.R
\name{evalues_adaptive}
\alias{evalues_adaptive}
\title{Estimate eigenvalues of functional data with adaptive bandwidths}
\usage{
evalues_adaptive(curves, grid_bandwidth, grid_smooth, k0, nvalues = 10, params)
}
\arguments{
\item{curves}{List, where each element represents a curve. Each curve
must be a list with two entries:
\itemize{
\item $t Sampling points.
\item $x Observed points.
}}

\item{grid_bandwidth}{Grid of points to estimate bandwidth.}

\item{grid_smooth}{Grid of points to smooth curves.}

\item{k0}{Minimum number of points curves must possess to be used in
estimation.}

\item{nvalues}{The number of eigenvalues to be kept.}

\item{params}{A tibble, containing the following parameters:
\itemize{
\item \strong{$t$} Sampling points.
\item \strong{$H} Estimated Hölder exponents.
\item \strong{$L} Estimated Hölder constants.
\item \strong{$sigma} Estimated noise.
\item \strong{$mu0} Estimated density of time points.
}}
}
\value{
A list containing
\itemize{
\item \strong{$eigenvalues} Normalised eigenvalues.
\item \strong{$bandwidth} Vector of bandwidths used for smoothing curves.
}
}
\description{
\code{evalues_adaptive} estimates eigenvalues using an adaptive bandwidth.
Curves can be irregularly sampled, possess heterogenous
degrees of smoothness and be relatively sparse (but should have
at least 20 points per curve). Uses the "smooth first, then estimate"
approach.
}
\references{
Patilea V., Wang S. (2022+) - Adaptive Functional
Principal Components Analysis
}
