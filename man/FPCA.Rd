% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FPCA.R
\name{FPCA}
\alias{FPCA}
\title{Performs functional principal components analysis}
\usage{
FPCA(
  data,
  grid_smooth,
  grid_bw,
  param_list,
  inflate_bw = TRUE,
  center = TRUE,
  nelements = 10,
  diag_cor = TRUE,
  h_power = 0.9
)
}
\arguments{
\item{data}{List of curves, with each element/curve containing two entries:
\itemize{
\item \strong{$t} Vector of time points along each curve.
\item \strong{$x} Vector of observed points along each curve.
}}

\item{grid_smooth}{Vector of sampling points to smooth curves. Eigenfunctions
will be computed at these sampling points.}

\item{grid_bw}{Vector of points for bandwidth optimization.}

\item{param_list}{List, containing the estimated parameters.}

\item{inflate_bw}{Boolean, indicating whether to correct the bandwidth due
to discretization error from estimating the regularity.}

\item{center}{Boolean, indicating whether to center curves.}

\item{nelements}{Numeric, indicating the number of eigen-elements to keep.}

\item{h_power}{Numeric, power to raise the bandwidth to when estimating
sigma for the purposes of diagonal correction.}
}
\value{
List, containing the following elements:
\itemize{
\item \strong{$params} List containing the estimated parameters.
\item \strong{$bw} Numeric containing the bandwidth used for smoothing curves.
\item \strong{$evalues} Vector containing the normalised eigenvalues.
\item \strong{$efunctions} Matrix containing the normalised eigenfunctions, with the j-th
column representing the j-th eigenfunction.
}
}
\description{
Perform FPCA of functional data adaptively using the local regularity of
curves. See references for more details on the algorithm.
}
