% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FPCA.R
\name{FPCA_adapt}
\alias{FPCA_adapt}
\title{Performs adaptive functional principal components analysis}
\usage{
FPCA_adapt(
  data,
  grid_smooth,
  grid_bw,
  param_list,
  inflate_bw = TRUE,
  center = TRUE,
  nelements = 10,
  diag_cor = TRUE,
  h_power = 0.9
)
}
\arguments{
\item{data}{List of curves, with each element/curve containing two entries:
\itemize{
\item \strong{$t} Vector of time points along each curve.
\item \strong{$x} Vector of observed points along each curve.
}}

\item{grid_smooth}{Vector of sampling points to smooth curves. Eigenfunctions
will be computed at these sampling points.}

\item{grid_bw}{Vector of points for bandwidth optimization.}

\item{param_list}{List of estimated parameters, for example from the
function \code{estimate_parameters_FPCA}. Must be on the same grid as \code{grid_smooth},
which can be interpolated for example using \code{intp_list}.}

\item{inflate_bw}{Boolean, indicating whether to correct the bandwidth due
to discretization error from estimating the regularity.}

\item{center}{Boolean, indicating whether to center curves.}

\item{nelements}{Numeric, indicating the number of eigen-elements to keep.
Numeric must be at least 3.}

\item{diag_cor}{Boolean, indicating whether to perform diagonal correction.}

\item{h_power}{Numeric, power to raise bandwidth to when estimating sigma
for the purposes of diagonal correction for the covariance function.}
}
\value{
List, containing the following elements:
\itemize{
\item \strong{$evalues} Vector containing the normalised eigenvalues.
\item \strong{$efunctions} Matrix containing the normalised eigenfunctions, with the j-th
column representing the j-th eigenfunction.
\item \strong{$bw_val} Vector containing the bandwidth used to smooth curves for each
eigenvalue.
\item \strong{$bw_fun} Vector containing the bandwidth used to smooth curves for each
eigenfunction.
}
}
\description{
Perform FPCA of functional data adaptively using the local regularity of
curves, and with bandwidths specific to each eigenvalue and eigenfunction.
Although more computationally demanding, it is more precise with regards to
the element-specific bandwidth.
}
